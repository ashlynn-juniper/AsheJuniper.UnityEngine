#pragma kernel Noise2D

float Resolution;
float Frequency;

float2 Offset;

RWTexture2D<float> Result;

float DropOff(float x);
float CalculateNoise2D(uint3 id);

[numthreads(16, 16, 1)]
void Noise2D(uint3 id : SV_DispatchThreadID)
{
    Result[id.xy] = (1.0 + CalculateNoise2D(id)) * 0.5;

}

float DropOff(float x)
{
    float v = 1 - abs(x);
    
    return 3 * v * v - 2 * v * v * v;
}

float CalculateNoise2D(uint3 id)
{
    float2 position = Offset * 2.0f + float2(id.xy);
    
    float2 g = normalize(float2(0.2, 0.1));
    //float2 v = position / (Resolution * 0.5) - float2(1.0, 1.0);
    float2 v = (position) * (1 / Resolution);
    
    v *= Frequency;
    
    //return dot(g, v) * DropOff(v.x) * DropOff(v.y);
    return dot(g, v) * DropOff(v.x) * DropOff(v.y);
}